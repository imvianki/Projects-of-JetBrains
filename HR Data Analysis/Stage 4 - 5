import pandas as pd
import requests
import os

# scroll down to the bottom to implement your solution

if __name__ == '__main__':

    if not os.path.exists('../Data'):
        os.mkdir('../Data')

    # Download data if it is unavailable.
    if ('A_office_data.xml' not in os.listdir('../Data') and
        'B_office_data.xml' not in os.listdir('../Data') and
        'hr_data.xml' not in os.listdir('../Data')):
        print('A_office_data loading.')
        url = "https://www.dropbox.com/s/jpeknyzx57c4jb2/A_office_data.xml?dl=1"
        r = requests.get(url, allow_redirects=True)
        open('../Data/A_office_data.xml', 'wb').write(r.content)
        print('Loaded.')

        print('B_office_data loading.')
        url = "https://www.dropbox.com/s/hea0tbhir64u9t5/B_office_data.xml?dl=1"
        r = requests.get(url, allow_redirects=True)
        open('../Data/B_office_data.xml', 'wb').write(r.content)
        print('Loaded.')

        print('hr_data loading.')
        url = "https://www.dropbox.com/s/u6jzqqg1byajy0s/hr_data.xml?dl=1"
        r = requests.get(url, allow_redirects=True)
        open('../Data/hr_data.xml', 'wb').write(r.content)
        print('Loaded.')

        # All data in now loaded to the Data folder.

    A_office_data = pd.read_xml('https://www.dropbox.com/s/jpeknyzx57c4jb2/A_office_data.xml?dl=1')
    B_office_data = pd.read_xml("https://www.dropbox.com/s/hea0tbhir64u9t5/B_office_data.xml?dl=1")
    hr_data = pd.read_xml("https://www.dropbox.com/s/u6jzqqg1byajy0s/hr_data.xml?dl=1")

    A_office_list = list(A_office_data.employee_office_id)
    B_office_list = list(B_office_data.employee_office_id)
    index_A_office = ['A' + str(a) for a in A_office_list]
    index_B_office = ['B' + str(b) for b in B_office_list]
    A_office_data.index = index_A_office
    B_office_data.index = index_B_office
    hr_data.set_index('employee_id', inplace=True)

    office_data = pd.concat([A_office_data, B_office_data])
    data = office_data.merge(hr_data, left_index=True, right_index=True, indicator=True)
    data = data.sort_index()
    data.drop(['employee_office_id', '_merge'], axis=1, inplace=True)

    def count_bigger_5(x):
        return (x > 5).sum()

    metrics = data.groupby('left').agg({
        'number_project': ['median', count_bigger_5],
        'time_spend_company': ['mean', 'median'],
        'Work_accident': 'mean',
        'last_evaluation': ['mean', 'std']
    })

    metrics = metrics.round(2).to_dict()
    print(metrics)
